version: '3'
services:
  
  user_service:
    build: ./user-service
    container_name: user_service
    ports:
      - "8000:8000"
    env_file:
      - ./user-service/env-vars.env
    links:
      - user_mongo:database
      - user_rabbit:queue
    networks: 
      - backend

  # post_service:
  #   build: ./post-service
  #   container_name: post_service
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - ./post-service/env-vars.env
  #   links:
  #     - post_mongo_1:database
  #     - post_mongo_2:database
  #     - post_mongo_3:database
  #   networks:
  #     - backend
  
  post_mongo_1:
    hostname: post_mongo_1
    image: mongo:4.2.0-bionic
    container_name: post_localmongo1
    expose:
      - 27017
    ports:
      - "5002:27017"
    networks: 
      - backend
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]

  # PRIMARY !!!!
  post_mongo_2:
    hostname: post_mongo_2
    image: mongo:4.2.0-bionic
    container_name: post_localmongo2
    expose:
      - 27017
    ports:
      - "27017:27017"
    volumes:
      - ./postService/data:/data/db
    networks: 
      - backend
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]

  post_mongo_3:
    hostname: post_mongo_3
    image: mongo:4.2.0-bionic
    container_name: post_localmongo3
    expose:
      - 27017
    ports:
      - "5003:27017"
    networks: 
      - backend
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  
  
  user_mongo:
    # hostname: user_mongo
    image: mongo:4.2.0-bionic
    container_name: user_mongo
    ports:
      - "5001:27017"
    volumes:
      - ./userService/data:/data/db
    networks: 
      - backend
  
  user_rabbit:
    image: rabbitmq:3.8-rc-management
    container_name: user_rabbit
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER:  "rabbitmq"
      RABBITMQ_DEFAULT_PASS:  "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - backend
    
networks:
  backend:
    driver: 'bridge'
