syntax = "proto3";

package Authorization;

import "google/protobuf/any.proto";

/*
 * ===================================================
 * 
 *                  Core Message Types
 *
 * ===================================================
*/

message ResourceType {
    string id   = 1;
    string name = 2;

    // list of actions that can be performed
    // against this type of resource
    repeated ResourceAction availableActions = 3;
}

message ResourceAction {
    string name = 1;
}

message ResourceInstance {
    string resourceId     = 1;
    string typeId         = 2;
    string ownerId        = 3;
    ResourcePolicy policy = 4;
}

message ResourcePolicy {
    // list of documents which specify who can access resource
    // and which actions is allowed to be performed against it
    repeated ResourcePolicyDocument documents = 2;
}

enum ResourcePolicyDocumentType {
	GLYPH_SYMBOL = 1;
	ACTIONS_LIST = 2;
}

message ResourcePolicyDocument {
    string identityId = 1;

    ResourcePolicyDocumentType policyDocumentType = 2;

    // type of document value is controlled by policy document type
    google.protobuf.Any policyDocumentValue = 3;
}

/*
 * ===================================================
 * 
 *             ResourcePermissionsService
 *
 * ===================================================
*/

message IsActionPermittedRequest {
    string resourceId = 1;
    string actionName = 2;
    string identityId = 3;
}

message IsActionPermittedResponse {
    bool result = 1;
}

message ResourceById {
    string resourceId = 1;
}

service ResourcePermissionsService {

    rpc GetResourcePolicyByResourceId(ResourceById) returns (ResourcePolicy);

    rpc CreateResourceInstance(ResourceInstance) returns (ResourceInstance);

    rpc CreateResourceType(ResourceType) returns (ResourceType);
    
    rpc IsActionPermitted(IsActionPermittedRequest) returns (IsActionPermittedResponse);

}

